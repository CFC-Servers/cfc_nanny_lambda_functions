AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  CFC Nanny

  performs actions on cfc game servers

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  NannySSHPrivateKey:
    Description: Required. The ssh private key to use for ssh lambda actions
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'NannySSHPrivateKey'

  NannyAuthJsonEnv:
    Description: Required. json data defining the auth environments
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'NannyAuthJsonEnv'

  CFC3RconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFC3RconPassword'

  CFCTestRconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCTestRconPassword'

Globals:
  Function:
    Timeout: 60
    Runtime: python3.8

Metadata:
  restart: &gmod_restart_defaults
    CodeUri: src/gmod_restart/
    Handler: app.lambda_handler
    Layers:
      - !Ref RestartDepLayer
      - !Ref LambdaResponseLayer

  vpc_execution: &vpc_execution
    VpcConfig:
      SecurityGroupIds:
        - sg-0e1b04d82e5e43b86
      SubnetIds:
        - subnet-0591f35ebb61a5df9

  layer_metadata: &layer_meta
    CompatibleRuntimes:
      - python3.8
    RetentionPolicy: Retain

  rcon: &gmod_rcon_defaults
    <<: *vpc_execution
    CodeUri: src/gmod_rcon/
    Handler: app.lambda_handler
    Layers:
      - !Ref RconDepLayer
      - !Ref LambdaResponseLayer

  rcon_variables:
    cfc3: &cfc3_rcon_env
      RCON_PORT: "27015"
      RCON_IP: "172.245.14.234"
      RCON_PASSWORD: !Ref CFC3RconPassword

    cfctest: &cfctest_rcon_env
      RCON_PORT: "27016"
      RCON_IP: "172.245.14.234"
      RCON_PASSWORD: !Ref CFCTestRconPassword

  ping: &gmod_ping_defaults
    <<: *vpc_execution
    CodeUri: src/gmod_ping/
    Handler: app.lambda_handler
    Layers:
      - !Ref RconDepLayer
      - !Ref LambdaResponseLayer
      - !Ref ResponseCachingLayer

  request: &request_properties
    ApiId: !Ref NannyApi
    Method: POST
    RouteSettings:
      ThrottlingBurstLimit: 2
      ThrottlingRateLimit: 1

  public_request: &public_request_properties
    <<: *request_properties
    Method: GET
    RouteSettings:
      ThrottlingBurstLimit: 10
      ThrottlingRateLimit: 5
    Auth:
      Authorizer: NONE

Resources:
  NannyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: NannyRequestAuthorizer
        Authorizers:
          NannyRequestAuthorizer:
            FunctionArn: !GetAtt CFCNannyAuthFunction.Arn
            AuthorizerPayloadFormatVersion: 2.0
            EnableSimpleResponses: true
            Identity:
              Headers:
                - Authorization
      Domain:
        DomainName: nanny.cfcservers.org
        CertificateArn: arn:aws:acm:us-east-1:215025579220:certificate/59d4ce5c-9509-4589-be7c-f8dadf00f12d

      DisableExecuteApiEndpoint: true

  # Auth
  CFCNannyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cfc_nanny_auth/
      Handler: authorizer.handler
      Environment:
        Variables:
          JSON_ENV: !Ref NannyAuthJsonEnv

  # Functions
  CFCTestRestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_restart_defaults
      Environment:
        Variables:
          private_key: !Ref NannySSHPrivateKey
          SERVER_DIR: "/var/steam/gmod/cfc-test/"
          SEVER_NAME: "cfctest"
      Events:
        CFCTestRestart:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-restart

  CFC3RestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_restart_defaults
      Environment:
        Variables:
          private_key: !Ref NannySSHPrivateKey
          SERVER_DIR: "/var/steam/gmod/cfc3/"
          SERVER_NAME: "cfc3"
      Events:
        CFC3Restart:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-restart

  CFCTestRconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_rcon_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
      Events:
        CFCTestRconCommand:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-rcon

  CFC3RconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_rcon_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
      Events:
        CFC3RconCommand:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-rcon

  CFCTestPingFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_ping_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
      Events:
        CFCTestPingCommand:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfctest-ping

  CFC3PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_ping_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
      Events:
        CFC3PingCommand:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfc3-ping

  # Layers
  RestartDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-restart-dependencies
      Description: Dependencies for cfc nanny restart
      ContentUri: layers/restart_dependencies
    Metadata:
      BuildMethod: makefile

  RconDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-rcon-dependencies
      Description: Dependencies for cfc nanny rcon
      ContentUri: layers/rcon_dependencies
    Metadata:
      BuildMethod: makefile

  LambdaResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-lambda-response-generator
      Description: Generates responses for lambda functions
      ContentUri: layers/lambda_responses
    Metadata:
      BuildMethod: makefile

  ResponseCachingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-lambda-response-caching
      Description: Provides an interface for easily caching responses to lambda functions
      ContentUri: layers/response_caching
    Metadata:
      BuildMethod: makefile
