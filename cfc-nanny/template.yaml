AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >
  CFC Nanny

  performs actions on cfc game servers

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  NannySSHPrivateKey:
    Description: Required. The ssh private key to use for ssh lambda actions
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'NannySSHPrivateKey'

  NannyAuthJsonEnv:
    Description: Required. json data defining the auth environments
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'NannyAuthJsonEnv'

  CFC3RconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFC3RconPassword'

  CFCTestRconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCTestRconPassword'

Globals:
  Function:
    Timeout: 60
    Runtime: python3.8

_shared:
  restart: &restart_defaults
    CodeUri: src/gmod_restart/
    Handler: app.lambda_handler
    Layers:
      - !Ref RestartDepLayer

Resources:
  NannyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: NannyRequestAuthorizer
        Authorizers:
          NannyRequestAuthorizer:
            FunctionArn: !GetAtt CFCNannyAuthFunction.Arn
            Identity:
              Headers:
                - Authorization
            AuthorizerPayloadFormatVersion: 2.0
            EnableSimpleResponses: true
      Domain:
        DomainName: nanny.cfcservers.org
        CertificateArn: arn:aws:acm:us-east-1:215025579220:certificate/59d4ce5c-9509-4589-be7c-f8dadf00f12d

      DisableExecuteApiEndpoint: true

  # Auth
  CFCNannyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cfc_nanny_auth/
      Handler: authorizer.handler
      Environment:
        Variables:
          JSON_ENV: !Ref NannyAuthJsonEnv

  # Functions
  CFCTestRestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *restart_defaults
      Environment:
        Variables:
          private_key: !Ref NannySSHPrivateKey
          SERVER_DIR: "/var/steam/gmod/cfc-test/"
          SEVER_NAME: "cfctest"
      Events:
        CFCTestRestart:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfctest-restart
            Method: post

  CFC3RestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *restart_defaults
      Environment:
        Variables:
          private_key: !Ref NannySSHPrivateKey
          SERVER_DIR: "/var/steam/gmod/cfc3/"
          SERVER_NAME: "cfc3"
      Events:
        CFC3Restart:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfc3-restart
            Method: post

  CFCTestRconFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e1b04d82e5e43b86
        SubnetIds:
          - subnet-0591f35ebb61a5df9
      CodeUri: src/gmod_rcon/
      Handler: app.lambda_handler

      Layers:
        - !Ref RconDepLayer
        - !Ref LambdaResponseLayer
      Environment:
        Variables:
          RCON_PORT: "27016"
          RCON_IP: "172.245.14.234"
          RCON_PASSWORD: !Ref CFCTestRconPassword
      Events:
        CFCTestRconCommand:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfctest-rcon
            Method: post

  CFC3RconFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e1b04d82e5e43b86
        SubnetIds:
          - subnet-0591f35ebb61a5df9
      CodeUri: src/gmod_rcon/
      Handler: app.lambda_handler

      Layers:
        - !Ref RconDepLayer
        - !Ref LambdaResponseLayer
      Environment:
        Variables:
          RCON_PORT: "27015"
          RCON_IP: "172.245.14.234"
          RCON_PASSWORD: !Ref CFC3RconPassword
      Events:
        CFC3RconCommand:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfc3-rcon
            Method: post

  CFCTestPingFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e1b04d82e5e43b86
        SubnetIds:
          - subnet-0591f35ebb61a5df9
      CodeUri: src/gmod_ping/
      Handler: app.lambda_handler

      Layers:
        - !Ref RconDepLayer
        - !Ref LambdaResponseLayer
        - !Ref ResponseCachingLayer
      Environment:
        Variables:
          RCON_PORT: "27016"
          RCON_IP: "172.245.14.234"
          RCON_PASSWORD: !Ref CFCTestRconPassword
      Events:
        CFCTestPingCommand:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfctest-ping
            Method: get
            Auth:
              Authorizer: NONE

  CFC3PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      VpcConfig:
        SecurityGroupIds:
          - sg-0e1b04d82e5e43b86
        SubnetIds:
          - subnet-0591f35ebb61a5df9
      CodeUri: src/gmod_ping/
      Handler: app.lambda_handler

      Layers:
        - !Ref RconDepLayer
        - !Ref LambdaResponseLayer
        - !Ref ResponseCachingLayer
      Environment:
        Variables:
          RCON_PORT: "27015"
          RCON_IP: "172.245.14.234"
          RCON_PASSWORD: !Ref CFC3RconPassword
      Events:
        CFC3PingCommand:
          Type: HttpApi
          Properties:
            ApiId: !Ref NannyApi
            Path: /cfc3-ping
            Method: get
            Auth:
              Authorizer: NONE

  # Layers
  RestartDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nanny-restart-dependencies
      Description: Dependencies for cfc nanny restart
      ContentUri: layers/restart_dependencies
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  RconDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nanny-rcon-dependencies
      Description: Dependencies for cfc nanny rcon
      ContentUri: layers/rcon_dependencies
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  LambdaResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nanny-lambda-response-generator
      Description: Generates responses for lambda functions
      ContentUri: layers/lambda_responses
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ResponseCachingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: nanny-lambda-response-caching
      Description: Provides an interface for easily caching responses to lambda functions
      ContentUri: layers/response_caching
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile
