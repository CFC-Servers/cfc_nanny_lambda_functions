AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31


Description: >
  CFC Nanny

  performs actions on cfc game servers


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  BuffaloSteamPrivateKey:
    Description: Required. The ssh private key to use for ssh actions on the Buffalo server
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'BuffaloSteamPrivateKey'

  LonestarSteamPrivateKey:
    Description: Required. The ssh private key to use for ssh actions on the Lonestar server
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'LonestarSteamPrivateKey'

  NannyAuthJsonEnv:
    Description: Required. json data defining the auth environments
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'NannyAuthJsonEnv'

  CFC3RconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFC3RconPassword'

  CFCTestRconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCTestRconPassword'

  CFCRPRconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCRPRconPassword'

  CFCMCCreativeRconPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: 'CFCMCCreativeRconPassword'

Globals:
  Function:
    Timeout: 60
    Runtime: python3.8


Metadata:
  # Meta
  layer_metadata: &layer_meta
    CompatibleRuntimes:
      - python3.8
    RetentionPolicy: Retain

  request_meta:
    request: &request_properties
      ApiId: !Ref NannyApi
      Method: POST
      RouteSettings:
        ThrottlingBurstLimit: 2
        ThrottlingRateLimit: 1

    public_request: &public_request_properties
      <<: *request_properties
      Method: GET
      RouteSettings:
        ThrottlingBurstLimit: 10
        ThrottlingRateLimit: 5
      Auth:
        Authorizer: NONE

  function_meta:
    vpc_execution: &vpc_execution
      VpcConfig:
        SecurityGroupIds:
          - sg-0e1b04d82e5e43b86
        SubnetIds:
          - subnet-0591f35ebb61a5df9

  # Function Defaults

  rcon: &rcon_function_defaults
    <<: *vpc_execution
    Handler: app.lambda_handler
    Layers:
      - !Ref RconDepLayer
      - !Ref LambdaResponseLayer
      - !Ref ResponseCachingLayer

  mcrcon: &mc_rcon_defaults
    <<: *vpc_execution
    CodeUri: src/mc_rcon/
    Handler: app.lambda_handler
    Layers:
      - !Ref LambdaResponseLayer
  mcstatus: &mc_status_defaults
    CodeUri: src/mc_status/
    Handler: app.lambda_handler
    Layers:
      - !Ref LambdaResponseLayer
      - !Ref MCStatusDepLayer

  restart: &gmod_restart_defaults
    <<: *vpc_execution
    CodeUri: src/gmod_restart/
    Handler: app.lambda_handler
    Layers:
      - !Ref RconDepLayer
      - !Ref RestartDepLayer
      - !Ref LambdaResponseLayer

  rcon: &gmod_rcon_defaults
    <<: *rcon_function_defaults
    CodeUri: src/gmod_rcon/

  update: &gmod_update_defaults
    <<: *rcon_function_defaults
    Layers:
      - !Ref RestartDepLayer
      - !Ref LambdaResponseLayer
    CodeUri: src/gmod_update/

  status: &gmod_status_defaults
    <<: *rcon_function_defaults
    CodeUri: src/gmod_status/

  ping: &gmod_ping_defaults
    <<: *rcon_function_defaults
    CodeUri: src/gmod_ping/

  # Environment
  rcon_variables:
    cfc3: &cfc3_rcon_env
      RCON_IP: 23.227.174.90
      RCON_PORT: 27015
      RCON_PASSWORD: !Ref CFC3RconPassword

    cfctest: &cfctest_rcon_env
      RCON_IP: 172.245.14.234
      RCON_PORT: 27016
      RCON_PASSWORD: !Ref CFCTestRconPassword

    cfcrp: &cfcrp_rcon_env
      RCON_IP: 23.227.174.90
      RCON_PORT: 29015
      RCON_PASSWORD: !Ref CFCRPRconPassword

    cfcmccreative: &cfcmc_creative_rcon_env
      RCON_IP: 23.227.174.90
      RCON_PORT: 25579
      RCON_PASSWORD: !Ref CFCMCCreativeRconPassword

  ssh_variables:
    buffalo: &buffalo_ssh_env
      SSH_HOST: 172.245.14.234
      SSH_PORT: 22
      SSH_USERNAME: steam
      SSH_PRIVATE_KEY: !Ref BuffaloSteamPrivateKey

    lonestar: &lonestar_ssh_env
      SSH_HOST: 23.227.174.90
      SSH_PORT: 2327
      SSH_USERNAME: steam
      SSH_PRIVATE_KEY: !Ref LonestarSteamPrivateKey

Resources:
  NannyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: NannyRequestAuthorizer
        Authorizers:
          NannyRequestAuthorizer:
            FunctionArn: !GetAtt CFCNannyAuthFunction.Arn
            AuthorizerPayloadFormatVersion: 2.0
            EnableSimpleResponses: true
            Identity:
              Headers:
                - Authorization
      Domain:
        DomainName: nanny.cfcservers.org
        CertificateArn: arn:aws:acm:us-east-1:215025579220:certificate/59d4ce5c-9509-4589-be7c-f8dadf00f12d

      DisableExecuteApiEndpoint: true

  # Auth
  CFCNannyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cfc_nanny_auth/
      Handler: authorizer.handler
      Environment:
        Variables:
          JSON_ENV: !Ref NannyAuthJsonEnv

  # Functions #

  # Restart
  CFCTestRestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_restart_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
          <<: *lonestar_ssh_env
          SERVER_DIRECTORY: "/var/steam/gmod/cfc-test/"
          SERVER_NAME: "cfctest"
      Events:
        CFCTestRestart:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-restart

  CFC3RestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_restart_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
          <<: *lonestar_ssh_env
          SERVER_DIRECTORY: "/media/storage/steam/garrysmod/cfc3"
          SERVER_NAME: "cfc3"
      Events:
        CFC3Restart:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-restart

  CFCRPRestartFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_restart_defaults
      Environment:
        Variables:
          <<: *cfcrp_rcon_env
          <<: *lonestar_ssh_env
          SERVER_DIRECTORY: "/media/storage/steam/garrysmod/cfc-darkrp/"
          SERVER_NAME: "cfcdarkrp"
      Events:
        CFCRPRestart:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfcrp-restart

  # Rcon
  CFCTestRconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_rcon_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
      Events:
        CFCTestRconCommand:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-rcon

  CFC3RconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_rcon_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
      Events:
        CFC3RconCommand:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-rcon

  CFCRPRconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_rcon_defaults
      Environment:
        Variables:
          <<: *cfcrp_rcon_env
      Events:
        CFCRPRconCommand:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfcrp-rcon

  # Ping
  CFCTestPingFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_ping_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
      Events:
        CFCTestPingCommand:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfctest-ping

  CFC3PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_ping_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
      Events:
        CFC3PingCommand:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfc3-ping

  CFCRPPingFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_ping_defaults
      Environment:
        Variables:
          <<: *cfcrp_rcon_env
      Events:
        CFCRPPingCommand:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfcrp-ping

  # Update
  CFC3UpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_update_defaults
      Environment:
        Variables:
          <<: *lonestar_ssh_env
          SCRIPTS_DIRECTORY: "/media/storage/steam/garrysmod/cfc3/scripts/cfc_server_steam_scripts"
      Events:
        CFC3Update:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-update

  CFCTestUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_update_defaults
      Environment:
        Variables:
          <<: *buffalo_ssh_env
          SCRIPTS_DIRECTORY: "/var/steam/gmod/cfc-test/scripts/cfc_server_steam_scripts/"
      Events:
        CFCTestUpdate:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-update

  CFCRPUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_update_defaults
      Environment:
        Variables:
          <<: *lonestar_ssh_env
          SCRIPTS_DIRECTORY: "/media/storage/steam/garrysmod/cfc-darkrp/scripts/cfc_server_steam_scripts/"
      Events:
        CFCRPUpdate:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfcrp-update

  # Full Status
  CFC3StatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
          FULL_STATUS: true
          INCLUDE_PVP: true
      Events:
        CFC3FullStatus:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfc3-full-status

  CFCTestStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
          FULL_STATUS: true
          INCLUDE_PVP: true
      Events:
        CFCTestFullStatus:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfctest-full-status

  CFCRPStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfcrp_rcon_env
          FULL_STATUS: true
      Events:
        CFCRPFullStatus:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfcrp-full-status

  # Public Status
  CFC3PublicStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfc3_rcon_env
          INCLUDE_PVP: true
      Events:
        CFC3Status:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfc3-status

  CFCTestPublicStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfctest_rcon_env
          INCLUDE_PVP: true
      Events:
        CFCTestStatus:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfctest-status

  CFCRPPublicStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *gmod_status_defaults
      Environment:
        Variables:
          <<: *cfcrp_rcon_env
      Events:
        CFCRPStatus:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfcrp-status
 
  CFCMCPublicStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *mc_status_defaults
      Events:
        CFCRPStatus:
          Type: HttpApi
          Properties:
            <<: *public_request_properties
            Path: /cfcmc-status

  CFCMCCreativeRconFunction:
    Type: AWS::Serverless::Function
    Properties:
      <<: *mc_rcon_defaults
      Environment:
        Variables:
          <<: *cfcmc_creative_rcon_env
      Events:
        CFCMCCreativeRcon:
          Type: HttpApi
          Properties:
            <<: *request_properties
            Path: /cfcmc-creative-rcon

  # Layers #
  MCStatusDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: minecraft-status-dependencies
      Description: Dependencies for cfc nanny mc status
      ContentUri: layers/minecraft_status_dependencies
    Metadata:
      BuildMethod: makefile

  RestartDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-restart-dependencies
      Description: Dependencies for cfc nanny restart
      ContentUri: layers/restart_dependencies
    Metadata:
      BuildMethod: makefile

  RconDepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-rcon-dependencies
      Description: Dependencies for cfc nanny rcon
      ContentUri: layers/rcon_dependencies
    Metadata:
      BuildMethod: makefile

  LambdaResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-lambda-response-generator
      Description: Generates responses for lambda functions
      ContentUri: layers/lambda_responses
    Metadata:
      BuildMethod: makefile

  ResponseCachingLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      <<: *layer_meta
      LayerName: nanny-lambda-response-caching
      Description: Provides an interface for easily caching responses to lambda functions
      ContentUri: layers/response_caching
    Metadata:
      BuildMethod: makefile
